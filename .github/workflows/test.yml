# JIT Build
name: Test DBPatch Manager

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  pull-requests: write
  checks: write

jobs:       
  

  Build-UI-Database:
    runs-on: ubuntu-latest
    defaults: 
      run:
        working-directory: ./
        
    steps: 
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Latest Tag
        id: get_latest_tag
        uses: actions/github-script@v7
        with:
          script: |
            let owner = "ormico";
            let repo = "dbpatchmanager";

            try{
              let response = await github.rest.repos.getLatestRelease({
                owner,
                repo,
              });

              let cliAssetUrl = null;
              if(response.data.assets.length > 0) {
                for (let asset of response.data.assets) {
                  if (asset.name.includes(".zip")) {
                    cliAssetUrl = asset.browser_download_url;
                    break;
                  }
                }
              } else {
                throw new Error("No assets found in the latest release.");
              }

              let release = response.data;
              let version = release.tag_name;

              core.info(`Latest release version: ${version}`);

              core.setOutput("latestTag", version);
              core.setOutput("cliAssetUrl", cliAssetUrl);
              
            } catch (error) {
              console.error("Error fetching latest release:", error);
            }

            # core.setOutput("latestTag", version);
            # core.setOutput("cliAssetUrl", cliAssetUrl);

          
      - name: Display Release Info
        run: |
          echo "Latest Release Version: ${{ steps.get-latest-tag.outputs.latestTag }}"
          echo "CLI Asset URL: ${{ steps.get-latest-tag.outputs.cliAssetUrl }}"

      - name: Download DbpatchManager CLI
        run: |
          echo "Downloading dbpatchmanager CLI..."
          curl -L -o dbpatchmanager.zip ${{ steps.get-latest-tag.outputs.cliAssetUrl }}
          echo "Unzipping dbpatchmanager CLI..."
          unzip -o dbpatchmanager.zip -d ./dbpatchmanager
          echo "Dbpatchmanager CLI downloaded and unzipped."

      - name: Install SQL Module for Powershell
        shell: pwsh
        run: Install-Module -Name SqlServer -Scope CurrentUser -Force

      - name: Make tool global
        run: |
          cd Release
          ls -al
          dotnet tool install --global --add-source . Ormico.DbPatchManager.CLI
      - name: Run tool
        run: |
          dbpatch version
